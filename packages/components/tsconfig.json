{
  "compilerOptions": {
    "target": "ESNext",
    // 编译目标 ECMAScript 版本
    "useDefineForClassFields": true,
    "module": "ESNext",
    // 使用 ESNext 模块系统
    "moduleResolution": "Bundler",
    // 或者 "NodeNext"，告诉 TS 如何解析模块，"Bundler" 更现代
    "strict": true,
    // 开启所有严格类型检查选项
    "jsx": "preserve",
    // 保留 JSX 结构，由 Vue 编译器处理
    "sourceMap": true,
    // 生成 .map 文件，方便调试
    "resolveJsonModule": true,
    // 允许导入 .json 文件
    // "isolatedModules": true, // 建议开启，确保每个文件都可以被单独编译（Vite 需要）
    "esModuleInterop": true,
    // 允许从 CommonJS 模块中默认导入
    "lib": ["ESNext", "DOM"],
    // 编译时可用的库
    "skipLibCheck": true,
    // 跳过对声明文件 (.d.ts) 的类型检查
    "noEmit": true,
    // TypeScript 编译器不输出文件，因为 Vite 会处理打包。这里 TS 主要用于类型检查。
    "baseUrl": ".",
    // 解析非相对模块名的基准目录
    "paths": {
      // 路径别名，和 vite.config.ts 中的 alias 对应
      "@/*": ["src/*"]
    },
    "types": ["vite/client", "vitest", "node"]
    // 为 Vite 客户端 API 提供类型支持
  },
  "include": ["src/**/*.ts", "src/**/*.d.ts", "src/**/*.tsx", "src/**/*.vue", "vite.config.ts"],
  "references": []
  // 引用一个专门给 Node 环境配置的 tsconfig
}
